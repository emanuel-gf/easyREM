[{"path":"https://emanuel-gf.github.io/easyREM/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Apache License","title":"Apache License","text":"Version 2.0, January 2004 <http://www.apache.org/licenses/>","code":""},{"path":[]},{"path":"https://emanuel-gf.github.io/easyREM/LICENSE.html","id":"id_1-definitions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"1. Definitions","title":"Apache License","text":"“License” shall mean terms conditions use, reproduction, distribution defined Sections 1 9 document. “Licensor” shall mean copyright owner entity authorized copyright owner granting License. “Legal Entity” shall mean union acting entity entities control, controlled , common control entity. purposes definition, “control” means () power, direct indirect, cause direction management entity, whether contract otherwise, (ii) ownership fifty percent (50%) outstanding shares, (iii) beneficial ownership entity. “” (“”) shall mean individual Legal Entity exercising permissions granted License. “Source” form shall mean preferred form making modifications, including limited software source code, documentation source, configuration files. “Object” form shall mean form resulting mechanical transformation translation Source form, including limited compiled object code, generated documentation, conversions media types. “Work” shall mean work authorship, whether Source Object form, made available License, indicated copyright notice included attached work (example provided Appendix ). “Derivative Works” shall mean work, whether Source Object form, based (derived ) Work editorial revisions, annotations, elaborations, modifications represent, whole, original work authorship. purposes License, Derivative Works shall include works remain separable , merely link (bind name) interfaces , Work Derivative Works thereof. “Contribution” shall mean work authorship, including original version Work modifications additions Work Derivative Works thereof, intentionally submitted Licensor inclusion Work copyright owner individual Legal Entity authorized submit behalf copyright owner. purposes definition, “submitted” means form electronic, verbal, written communication sent Licensor representatives, including limited communication electronic mailing lists, source code control systems, issue tracking systems managed , behalf , Licensor purpose discussing improving Work, excluding communication conspicuously marked otherwise designated writing copyright owner “Contribution.” “Contributor” shall mean Licensor individual Legal Entity behalf Contribution received Licensor subsequently incorporated within Work.","code":""},{"path":"https://emanuel-gf.github.io/easyREM/LICENSE.html","id":"id_2-grant-of-copyright-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"2. Grant of Copyright License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable copyright license reproduce, prepare Derivative Works , publicly display, publicly perform, sublicense, distribute Work Derivative Works Source Object form.","code":""},{"path":"https://emanuel-gf.github.io/easyREM/LICENSE.html","id":"id_3-grant-of-patent-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"3. Grant of Patent License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable (except stated section) patent license make, made, use, offer sell, sell, import, otherwise transfer Work, license applies patent claims licensable Contributor necessarily infringed Contribution(s) alone combination Contribution(s) Work Contribution(s) submitted. institute patent litigation entity (including cross-claim counterclaim lawsuit) alleging Work Contribution incorporated within Work constitutes direct contributory patent infringement, patent licenses granted License Work shall terminate date litigation filed.","code":""},{"path":"https://emanuel-gf.github.io/easyREM/LICENSE.html","id":"id_4-redistribution","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"4. Redistribution","title":"Apache License","text":"may reproduce distribute copies Work Derivative Works thereof medium, without modifications, Source Object form, provided meet following conditions: () must give recipients Work Derivative Works copy License; (b) must cause modified files carry prominent notices stating changed files; (c) must retain, Source form Derivative Works distribute, copyright, patent, trademark, attribution notices Source form Work, excluding notices pertain part Derivative Works; (d) Work includes “NOTICE” text file part distribution, Derivative Works distribute must include readable copy attribution notices contained within NOTICE file, excluding notices pertain part Derivative Works, least one following places: within NOTICE text file distributed part Derivative Works; within Source form documentation, provided along Derivative Works; , within display generated Derivative Works, wherever third-party notices normally appear. contents NOTICE file informational purposes modify License. may add attribution notices within Derivative Works distribute, alongside addendum NOTICE text Work, provided additional attribution notices construed modifying License. may add copyright statement modifications may provide additional different license terms conditions use, reproduction, distribution modifications, Derivative Works whole, provided use, reproduction, distribution Work otherwise complies conditions stated License.","code":""},{"path":"https://emanuel-gf.github.io/easyREM/LICENSE.html","id":"id_5-submission-of-contributions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"5. Submission of Contributions","title":"Apache License","text":"Unless explicitly state otherwise, Contribution intentionally submitted inclusion Work Licensor shall terms conditions License, without additional terms conditions. Notwithstanding , nothing herein shall supersede modify terms separate license agreement may executed Licensor regarding Contributions.","code":""},{"path":"https://emanuel-gf.github.io/easyREM/LICENSE.html","id":"id_6-trademarks","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"6. Trademarks","title":"Apache License","text":"License grant permission use trade names, trademarks, service marks, product names Licensor, except required reasonable customary use describing origin Work reproducing content NOTICE file.","code":""},{"path":"https://emanuel-gf.github.io/easyREM/LICENSE.html","id":"id_7-disclaimer-of-warranty","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"7. Disclaimer of Warranty","title":"Apache License","text":"Unless required applicable law agreed writing, Licensor provides Work (Contributor provides Contributions) “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied, including, without limitation, warranties conditions TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE. solely responsible determining appropriateness using redistributing Work assume risks associated exercise permissions License.","code":""},{"path":"https://emanuel-gf.github.io/easyREM/LICENSE.html","id":"id_8-limitation-of-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"8. Limitation of Liability","title":"Apache License","text":"event legal theory, whether tort (including negligence), contract, otherwise, unless required applicable law (deliberate grossly negligent acts) agreed writing, shall Contributor liable damages, including direct, indirect, special, incidental, consequential damages character arising result License use inability use Work (including limited damages loss goodwill, work stoppage, computer failure malfunction, commercial damages losses), even Contributor advised possibility damages.","code":""},{"path":"https://emanuel-gf.github.io/easyREM/LICENSE.html","id":"id_9-accepting-warranty-or-additional-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"9. Accepting Warranty or Additional Liability","title":"Apache License","text":"redistributing Work Derivative Works thereof, may choose offer, charge fee , acceptance support, warranty, indemnity, liability obligations /rights consistent License. However, accepting obligations, may act behalf sole responsibility, behalf Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted , Contributor reason accepting warranty additional liability. END TERMS CONDITIONS","code":""},{"path":"https://emanuel-gf.github.io/easyREM/LICENSE.html","id":"appendix-how-to-apply-the-apache-license-to-your-work","dir":"","previous_headings":"","what":"APPENDIX: How to apply the Apache License to your work","title":"Apache License","text":"apply Apache License work, attach following boilerplate notice, fields enclosed brackets [] replaced identifying information. (Don’t include brackets!) text enclosed appropriate comment syntax file format. also recommend file class name description purpose included “printed page” copyright notice easier identification within third-party archives.","code":"Copyright [yyyy] [name of copyright owner]  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."},{"path":"https://emanuel-gf.github.io/easyREM/articles/easyREM.html","id":"relative-elevation-models","dir":"Articles","previous_headings":"","what":"Relative Elevation Models","title":"","text":"Relative Digital Models (REM) way visualized exposed differences elevation particular region interest (ROI) highlight patterns regarding land surface. REM used methodology delineating Planning-Level Channel Migration Zones, propoused Washignton State Department Ecology regulate development within areas shoreline streams. CMZ - Washington Ecology Dept.  notebook aims help everyone interest hydrology, water urban management.","code":""},{"path":"https://emanuel-gf.github.io/easyREM/articles/easyREM.html","id":"libraries-and-dependencies","dir":"Articles","previous_headings":"Relative Elevation Models","what":"Libraries and dependencies","title":"","text":"First install easyREM library hosted github.","code":"library(remotes) remotes::install_github(\"emanuel-gf/easyREM\") library(easyREM)"},{"path":"https://emanuel-gf.github.io/easyREM/articles/easyREM.html","id":"creating-boundaries-bbox","dir":"Articles","previous_headings":"Relative Elevation Models","what":"Creating Boundaries (bbox)","title":"","text":"delimitate boundaries region interest (ROI) used ArcGIS web map look USGS tiles covering regions stored web-service. points represents left-right-corners ROI.","code":"##Set boundaries of the bbox xmin <- -93.382 ymin <- 34.2653 xmax <- -93.361 ymax <- 34.275  ## Set CRS crs <- 4326  ##WGS84  ### Creating the BBox bbox <- create_bbox(xmin, xmax, ymin, ymax,crs=crs) ## Visualizing the bbox mapview::mapview(bbox,alpha=0.1,map.types ='Esri.WorldImagery')"},{"path":[]},{"path":"https://emanuel-gf.github.io/easyREM/articles/easyREM.html","id":"usgs-dem","dir":"Articles","previous_headings":"Relative Elevation Models > DEM Data","what":"USGS DEM","title":"","text":"USGS web-service provides easy way download data Download files USGS service. Depending size ROI, may take . USGS service, tile size 7948X7948, spatial resolution 1meter, returns tile nearly 8 km. Sometimes, ROI covered one tile, necessary composite mosaic tiles deal properly. properly mosaic, attributes needs consider matching Spatial Resolution CRS. function deals mosaicing objects, variable pass list provided terrainR get_tiles function. case already download tiles, can easily recreate list running following code. Deals ROI bigger one tile. aware big ROI areas well representative REM.","code":"library(progressr) handlers(\"progress\") with_progress( dem <- terrainr::get_tiles(     data = bbox,     output_prefix = \"rem\",     side_length = NULL,     resolution = 2, #meters     services = \"elevation\",     verbose = TRUE     ) )  sprintf('The DEM tiles are compose by %s tile(s)',length(dem$elevation)) ##Converting to terra objects ## In case the bbox have only one tile. if (length(dem$elevation)==1) {   dem_rast <- terra::rast(dem$elevation)   dem_rast <- terra::rast(\"rem_3DEPElevation_1_1.tif\") } else {   ## For more than one tile is necessary to create a composition   dem_rast <- process_dem_tiles(dem,verbose=TRUE) } if (length(dem$elevation)>1){   ### Merge the raster dem_mosaic <- terra::merge(dem_rast[[1]],dem_rast[[2]],dem_rast[[3]],                            dem_rast[[4]],                            #dem_rast[[5]],dem_rast[[6]],                            filename='merged.tif',                            overwrite=TRUE) }"},{"path":"https://emanuel-gf.github.io/easyREM/articles/easyREM.html","id":"river-line","dir":"Articles","previous_headings":"Relative Elevation Models","what":"River Line","title":"","text":"order create REM objects, important step mapped center-line river channels.","code":""},{"path":"https://emanuel-gf.github.io/easyREM/articles/easyREM.html","id":"osm-data","dir":"Articles","previous_headings":"Relative Elevation Models > River Line","what":"OSM Data","title":"","text":"Visualize river shapefiles retrieved OSM","code":"# Retrieve OSM Data river <- osmdata::opq(     bbox = sf::st_bbox(bbox) ) |>     osmdata::add_osm_feature(         key = \"waterway\",         value = \"river\"     ) |>   osmdata::osmdata_sf() ##Simple feature objects   river_sf <- river$osm_lines |> ## Intersect the bbox     sf::st_intersection(         bbox     ) |>     sf::st_union() |>     sf::st_cast(         \"LINESTRING\"     ) |>   sf::st_as_sf() ##Visualize the river  terra::plot(dem_rast)   plot(     sf::st_geometry(         river_sf     ),     col = \"white\",     add = TRUE )"},{"path":"https://emanuel-gf.github.io/easyREM/articles/easyREM.html","id":"hydrosheed","dir":"Articles","previous_headings":"Relative Elevation Models > River Line","what":"HydroSheed","title":"","text":"Another way retrieve rivers shapefile project HydroSheeds https://www.hydrosheds.org/. facilitate process, package contain function download current folder .shp file. function requires region sourced HydroSheeds region mapping, Global regions Africa, South America, Asia, Australia/Oceania, Europe, North America. information can reached : LINK EXPLATION PAGE GITHUB LINK HYDROSHEEDS PROJECT order figure region interest located regarding atlas provided HydroSheeds project, function called check . , correct HydroSheed Rivers dataset downloaded glossay HydroRivers : sa = South America ar = Artic = Asia eu = Europe Middle East au = Australasia na = North America af = Africa Filter boundary box intersects Rivers geofiles. Plot WaterSheeds Rivers compare others Datasets. Due fact HydroSheeds project generate USGS DEM-30meters, rivers delineate accumulation flow flats areas accumulation flow algoritm exactly matches center river line. deal situation accuracy possible, possible create river centerline several ways approaches propoused Remote Sensing imagery. sense propouse tutorial, gonna attach OSM data due fact matches enough.","code":"determine_hydrosheds_region(sf::st_bbox(bbox)[\"xmin\"],sf::st_bbox(bbox)[\"ymin\"]) rivers_ar <- download_hydrorivers(\"na\")  print(rivers_ar) rivers_intersect <- get_intersecting_rivers(rivers_ar,bbox) terra::plot(dem_rast)   plot(     sf::st_geometry(         rivers_intersect     ),     col = \"white\",     add = TRUE )"},{"path":"https://emanuel-gf.github.io/easyREM/articles/easyREM.html","id":"extract-values","dir":"Articles","previous_headings":"Relative Elevation Models","what":"Extract Values","title":"","text":"Extracting elevation values strategy populating river shapefile elevation DEM raster. crucial step develop REM model. Depending computational capacity, resampling raster needed . Also, resolution 1 meter, river changed capted trhough point finer, less 1 meter, whole area analysis computational expensive.","code":"## Resampling the raster in case your laptop can not process.  #dem_rast_agg <- terra::aggregate( #    dem_rast, #    fact = 2 #)  river_elev <- terra::extract(     x = dem_rast,     y = terra::vect(river_sf),     xy = TRUE,     na.rm = TRUE ) |>     na.omit()  names(river_elev)[2] <- \"elevation\" #Rename the column to elevation print(c(nrow(river_elev),'elevation points were extracted'))"},{"path":[]},{"path":"https://emanuel-gf.github.io/easyREM/articles/easyREM.html","id":"idw---inverse-distance-weighting","dir":"Articles","previous_headings":"Relative Elevation Models > Interpolation","what":"IDW - Inverse Distance Weighting","title":"","text":"Inverse distance weighting spatial technique well-spreaded geospatial field. IDW takes consideration close points weighted relative far points. points away get less weight predicting value location IDW delineation Bottom Valley Channel (BVC) used Washington Department Ecology studies can found : https://apps.ecology.wa.gov/publications/documents/1406025.pdf order apply method R, package gstat called creates IDW interpolation gstat object.","code":"## Create IDW model idw_model <- gstat::gstat(   formula = elevation ~ 1,   locations = ~x + y,   data = river_elev,   nmax = nrow(river_elev) )  ## Predict Values by Interpolating  river_surface <- terra::interpolate(   dem_rast,   idw_model,   crs=terra::crs(dem_rast) )"},{"path":"https://emanuel-gf.github.io/easyREM/articles/easyREM.html","id":"relative-elevation-model","dir":"Articles","previous_headings":"Relative Elevation Models","what":"Relative Elevation Model","title":"","text":"relative elevation model nothing subtraction river interpolation raster digital elevation model.","code":"terra::plot(river_surface) rem <- dem_rast - river_surface  rem_final <- terra::resample(     rem, dem_rast )"},{"path":"https://emanuel-gf.github.io/easyREM/articles/easyREM.html","id":"visualize","dir":"Articles","previous_headings":"Relative Elevation Models","what":"Visualize","title":"","text":"Computes logarithms elevation Easily creating contour line REM mode","code":"rem_df <- as.data.frame(     rem_final,     xy = TRUE )  head(rem_df)  names(rem_df)[3] <- \"elevation\" epsilon <- 1e-10  rem_df$elevation_log <- log1p(     pmax(         rem_df$elevation, epsilon     ) )  breaks <- classInt::classIntervals(     rem_df$elevation_log,     n = 12,     style = \"fisher\",     largeN=TRUE,     samp_prop = 0.1 )$brks ### Let`s make a quick plot to visualize the REM  #Create a pallette  cols <- hcl.colors(     palette = \"vik\",     12, rev = TRUE ) #Vis pie(rep(     1, length(cols) ), col = cols)  # SELECT THE PALLETTE pal <- cols[c(1, 2:12)] theme_for_the_win <- function() {     theme_minimal() +         theme(             axis.line = element_blank(),             axis.title.x = element_blank(),             axis.title.y = element_blank(),             axis.text.x = element_blank(),             axis.text.y = element_blank(),             panel.grid.major = element_blank(),             panel.grid.minor = element_blank(),             legend.position = \"none\",             plot.background = element_rect(                 fill = \"white\", color = NA             ),             plot.margin = unit(                 c(                     t = 0, r = 0,                     l = 0, b = 0                 ), \"cm\"             )         ) }  theme_for_vis <- function() {     theme_minimal() +         theme(             axis.line = element_blank(),             axis.title.x = element_blank(),             axis.title.y = element_blank(),             axis.text.x = element_blank(),             axis.text.y = element_blank(),             panel.grid.major = element_blank(),             panel.grid.minor = element_blank(),             legend.position = \"right\",               legend.title = element_blank(),             legend.key.height = unit(1.5, \"cm\"),             legend.key.width = unit(0.5, \"cm\"),             plot.background = element_rect(                 fill = \"white\", color = NA             ),             plot.margin = unit(                 c(                     t = 0, r = 0.5,                      l = 0, b = 0                 ), \"cm\"             )         ) } rem_plot <- ggplot(                     rem_df, aes(                     x = x, y = y,                     fill = elevation_log                     )                   )+                      geom_raster() +                      scale_fill_gradientn(                          breaks = breaks,                          colours = pal,                          name = \"\"                      ) +                      theme_for_the_win() rem_plot ## Contour Line contour_line <- terra::contour(rem_final)"},{"path":"https://emanuel-gf.github.io/easyREM/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Emanuel Goulart. Author, maintainer.","code":""},{"path":"https://emanuel-gf.github.io/easyREM/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Goulart E (2025). easyREM: Relative Elevation Models ease. R package version 0.1.0, https://emanuel-gf.github.io/easyREM/.","code":"@Manual{,   title = {easyREM: Relative Elevation Models at ease},   author = {Emanuel Goulart},   year = {2025},   note = {R package version 0.1.0},   url = {https://emanuel-gf.github.io/easyREM/}, }"},{"path":"https://emanuel-gf.github.io/easyREM/index.html","id":"pkgdown","dir":"","previous_headings":"","what":"Relative Elevation Models at ease","title":"Relative Elevation Models at ease","text":"{easyREM} R package designed simplify creation Relative Elevation Models (REMs). utilizing Digital Elevation Models (DEMs) specified region interest, package streamlines process generating visualizing REMs.","code":""},{"path":"https://emanuel-gf.github.io/easyREM/index.html","id":"how-it-works","dir":"","previous_headings":"","what":"How It Works","title":"Relative Elevation Models at ease","text":"package collection functions simplify retrieval creation Relative Elevation Models (REMs). REMs method visualizing analyzing elevation differences within specific area. detailed explanation REMs provided vignette section package. package offers following functionalities functions: Digital Elevation Model (DEM): package retrieves DEM data USGS service, offering resolution 1 meter North America 30 meters rest world. River Lines: Shapefiles river lines obtained two primary sources: OpenStreetMap (OSM) Data HydroSHEDS Project. interpolation method used package well-known Inverse-Distance Weighting (IDW) technique, based research Washington State Department Ecology. development project small contribution vast open-source software community. Facilitating scientific processes sharing knowledge core principle society.","code":""},{"path":"https://emanuel-gf.github.io/easyREM/index.html","id":"article","dir":"","previous_headings":"","what":"Article","title":"Relative Elevation Models at ease","text":"detailed introduction REMs, methodology behind , reading, please refer Article. also serves guide exploring power R Notebooks open-source R community.","code":""},{"path":"https://emanuel-gf.github.io/easyREM/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Relative Elevation Models at ease","text":"can install development version {easyREM} GitHub using remotes package. Note package currently available CRAN. install , use following code: installation, just need call package. :)","code":"library(remotes) remotes::install_github(\"emanuel-gf/easyREM\")"},{"path":"https://emanuel-gf.github.io/easyREM/index.html","id":"disclaimer","dir":"","previous_headings":"","what":"Disclaimer","title":"Relative Elevation Models at ease","text":"package developt part Application Development Course, Z-GIS department Paris-Lodron University Salzburg. package development features take place moment.","code":""},{"path":"https://emanuel-gf.github.io/easyREM/reference/create_bbox.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Bounding Box (bbox) Polygon — create_bbox","title":"Create a Bounding Box (bbox) Polygon — create_bbox","text":"function creates bounding box polygon based given minimum maximum coordinates.","code":""},{"path":"https://emanuel-gf.github.io/easyREM/reference/create_bbox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Bounding Box (bbox) Polygon — create_bbox","text":"","code":"create_bbox(xmin, xmax, ymin, ymax, crs)"},{"path":"https://emanuel-gf.github.io/easyREM/reference/create_bbox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Bounding Box (bbox) Polygon — create_bbox","text":"xmin Minimum x-coordinate (longitude). xmax Maximum x-coordinate (longitude). ymin Minimum y-coordinate (latitude). ymax Maximum y-coordinate (latitude). crs Coordinate Reference System (CRS) assigned bounding box.","code":""},{"path":"https://emanuel-gf.github.io/easyREM/reference/create_bbox.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Bounding Box (bbox) Polygon — create_bbox","text":"`sfc` object representing bounding box polygon.","code":""},{"path":[]},{"path":"https://emanuel-gf.github.io/easyREM/reference/determine_hydrosheeds_region.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine HydroSHEDS Region — determine_hydrosheeds_region","title":"Determine HydroSHEDS Region — determine_hydrosheeds_region","text":"function determines HydroSHEDS region based given longitude latitude.","code":""},{"path":"https://emanuel-gf.github.io/easyREM/reference/determine_hydrosheeds_region.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine HydroSHEDS Region — determine_hydrosheeds_region","text":"","code":"determine_hydrosheeds_region(lon, lat)"},{"path":"https://emanuel-gf.github.io/easyREM/reference/determine_hydrosheeds_region.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine HydroSHEDS Region — determine_hydrosheeds_region","text":"lon Longitude coordinate. lat Latitude coordinate.","code":""},{"path":"https://emanuel-gf.github.io/easyREM/reference/determine_hydrosheeds_region.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine HydroSHEDS Region — determine_hydrosheeds_region","text":"character string indicating region(s) coordinates fall .","code":""},{"path":"https://emanuel-gf.github.io/easyREM/reference/determine_hydrosheeds_region.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Determine HydroSHEDS Region — determine_hydrosheeds_region","text":"","code":"region <- determine_hydrosheeds_region(lon = 10, lat = 50)"},{"path":"https://emanuel-gf.github.io/easyREM/reference/download_hydrorivers.html","id":null,"dir":"Reference","previous_headings":"","what":"Download HydroRIVERS Data — download_hydrorivers","title":"Download HydroRIVERS Data — download_hydrorivers","text":"function downloads HydroRIVERS data specified region HydroSHEDS database.","code":""},{"path":"https://emanuel-gf.github.io/easyREM/reference/download_hydrorivers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download HydroRIVERS Data — download_hydrorivers","text":"","code":"download_hydrorivers(region = \"global\", base_dir = getwd())"},{"path":"https://emanuel-gf.github.io/easyREM/reference/download_hydrorivers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download HydroRIVERS Data — download_hydrorivers","text":"region Character string specifying region. Valid options \"global\", \"af\", \"ar\", \"\", \"au\", \"eu\", \"na\", \"sa\". base_dir Directory data downloaded. Defaults current working directory.","code":""},{"path":"https://emanuel-gf.github.io/easyREM/reference/download_hydrorivers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download HydroRIVERS Data — download_hydrorivers","text":"`sf` object containing river data.","code":""},{"path":"https://emanuel-gf.github.io/easyREM/reference/download_hydrorivers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download HydroRIVERS Data — download_hydrorivers","text":"","code":"if (FALSE) { # \\dontrun{ rivers <- download_hydrorivers(region = \"eu\") } # }"},{"path":"https://emanuel-gf.github.io/easyREM/reference/process_dem_tiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Process DEM Tiles — process_dem_tiles","title":"Process DEM Tiles — process_dem_tiles","text":"function processes list DEM tiles, ensuring CRS resolution.","code":""},{"path":"https://emanuel-gf.github.io/easyREM/reference/process_dem_tiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process DEM Tiles — process_dem_tiles","text":"","code":"process_dem_tiles(dem_files, verbose = FALSE)"},{"path":"https://emanuel-gf.github.io/easyREM/reference/process_dem_tiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process DEM Tiles — process_dem_tiles","text":"dem_files list containing DEM file paths. verbose Logical. TRUE, prints detailed messages processing.","code":""},{"path":"https://emanuel-gf.github.io/easyREM/reference/process_dem_tiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process DEM Tiles — process_dem_tiles","text":"list processed raster tiles.","code":""},{"path":"https://emanuel-gf.github.io/easyREM/reference/process_dem_tiles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process DEM Tiles — process_dem_tiles","text":"","code":"if (FALSE) { # \\dontrun{ dem_files <- list(elevation = c(\"dem1.tif\", \"dem2.tif\")) processed_tiles <- process_dem_tiles(dem_files, verbose = TRUE) } # }"},{"path":"https://emanuel-gf.github.io/easyREM/reference/st_intersecting_river.html","id":null,"dir":"Reference","previous_headings":"","what":"Intersect Rivers with a Bounding Box — st_intersecting_river","title":"Intersect Rivers with a Bounding Box — st_intersecting_river","text":"function clips river segments intersect given bounding box.","code":""},{"path":"https://emanuel-gf.github.io/easyREM/reference/st_intersecting_river.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Intersect Rivers with a Bounding Box — st_intersecting_river","text":"","code":"st_intersecting_river(rivers_sf, bbox_polygon)"},{"path":"https://emanuel-gf.github.io/easyREM/reference/st_intersecting_river.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Intersect Rivers with a Bounding Box — st_intersecting_river","text":"rivers_sf `sf` object containing river data. bbox_polygon `sf` `sfc` object representing bounding box.","code":""},{"path":"https://emanuel-gf.github.io/easyREM/reference/st_intersecting_river.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Intersect Rivers with a Bounding Box — st_intersecting_river","text":"`sf` object containing clipped river segments.","code":""},{"path":"https://emanuel-gf.github.io/easyREM/reference/st_intersecting_river.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Intersect Rivers with a Bounding Box — st_intersecting_river","text":"","code":"if (FALSE) { # \\dontrun{ bbox <- create_bbox(xmin = -10, xmax = 10, ymin = -10, ymax = 10, crs = 4326) rivers <- download_hydrorivers(region = \"eu\") clipped_rivers <- st_intersecting_river(rivers, bbox) } # }"}]
